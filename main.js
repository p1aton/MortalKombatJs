const $arenas = document.querySelector('.arenas');
// const $randomButton = document.querySelector('.button');
const $formFight = document.querySelector('.control');

const $chat = document.querySelector('.chat');

const HIT = {
  head: 30,
  body: 25,
  foot: 20,
}


const ATTACK = ['head', 'body', 'foot'];

const logs = {
  start: '–ß–∞—Å—ã –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏ [time], –∫–æ–≥–¥–∞ [player1] –∏ [player2] –±—Ä–æ—Å–∏–ª–∏ –≤—ã–∑–æ–≤ –¥—Ä—É–≥ –¥—Ä—É–≥—É.',
  end: [
    '–†–µ–∑—É–ª—å—Ç–∞—Ç —É–¥–∞—Ä–∞ [playerWins]: [playerLose] - —Ç—Ä—É–ø',
    '[playerLose] –ø–æ–≥–∏–± –æ—Ç —É–¥–∞—Ä–∞ –±–æ–π—Ü–∞ [playerWins]',
    '–†–µ–∑—É–ª—å—Ç–∞—Ç –±–æ—è: [playerLose] - –∂–µ—Ä—Ç–≤–∞, [playerWins] - —É–±–∏–π—Ü–∞',
  ],
  hit: [
    '[time], [playerDefence] –ø—ã—Ç–∞–ª—Å—è —Å–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –Ω–æ [playerKick] —Ä–∞–∑–±–µ–∂–∞–≤—à–∏—Å—å —Ä–∞–∑–¥—Ä–æ–±–∏–ª –∫–æ–ø—á–∏–∫–æ–º –ª–µ–≤–æ–µ —É—Ö–æ –≤—Ä–∞–≥–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] —Ä–∞—Å—Å—Ç—Ä–æ–∏–ª—Å—è, –∫–∞–∫ –≤–¥—Ä—É–≥, –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ [playerKick] —Å–ª—É—á–∞–π–Ω–æ —Ä–∞–∑–¥—Ä–æ–±–∏–ª –≥—Ä—É–¥—å—é –≥—Ä—É–¥–∏–Ω—É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] –∑–∞–∂–º—É—Ä–∏–ª—Å—è, –∞ –≤ —ç—Ç–æ –≤—Ä–µ–º—è [playerKick], –ø—Ä–æ—Å–ª–µ–∑–∏–≤—à–∏—Å—å, —Ä–∞–∑–¥—Ä–æ–±–∏–ª –∫—É–ª–∞–∫–æ–º –ø–∞—Ö –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] —á–µ—Å–∞–ª <–≤—ã—Ä–µ–∑–∞–Ω–æ —Ü–µ–Ω–∑—É—Ä–æ–π>, –∏ –≤–Ω–µ–∑–∞–ø–Ω–æ –Ω–µ—É—Å—Ç—Ä–∞—à–∏–º—ã–π [playerKick] –æ—Ç—á–∞—è–Ω–Ω–æ —Ä–∞–∑–º–æ–∑–∂–∏–ª –≥—Ä—É–¥—å—é –ª–µ–≤—ã–π –±–∏—Ü–µ–ø—Å –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] –∑–∞–¥—É–º–∞–ª—Å—è, –Ω–æ –≤–Ω–µ–∑–∞–ø–Ω–æ [playerKick] —Å–ª—É—á–∞–π–Ω–æ –≤–ª–µ–ø–∏–ª –≥—Ä—É–±—ã–π —É–¥–∞—Ä –∫–æ–ø—á–∏–∫–æ–º –≤ –ø–æ—è—Å –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] –∫–æ–≤—ã—Ä—è–ª—Å—è –≤ –∑—É–±–∞—Ö, –Ω–æ [playerKick] –ø—Ä–æ—Å–Ω—É–≤—à–∏—Å—å –≤–ª–µ–ø–∏–ª —Ç—è–∂–µ–ª—ã–π —É–¥–∞—Ä –ø–∞–ª—å—Ü–µ–º –≤ –∫–∞–¥—ã–∫ –≤—Ä–∞–≥–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] –≤—Å–ø–æ–º–Ω–∏–ª —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ, –Ω–æ –≤–Ω–µ–∑–∞–ø–Ω–æ [playerKick] –∑–µ–≤–Ω—É–≤, —Ä–∞–∑–º–æ–∑–∂–∏–ª –æ—Ç–∫—Ä—ã—Ç–æ–π –ª–∞–¥–æ–Ω—å—é —á–µ–ª—é—Å—Ç—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] –æ—Å–º–æ—Ç—Ä–µ–ª—Å—è, –∏ –≤ —ç—Ç–æ –≤—Ä–µ–º—è [playerKick] –º–∏–º–æ—Ö–æ–¥–æ–º —Ä–∞–∑–¥—Ä–æ–±–∏–ª —Å—Ç–æ–ø–æ–π –∞–ø–ø–µ–Ω–¥–∏–∫—Å —Å–æ–ø–µ—Ä–Ω–∏–∫–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] –∫–∞—à–ª—è–Ω—É–ª, –Ω–æ –≤–Ω–µ–∑–∞–ø–Ω–æ [playerKick] –ø–æ–∫–∞–∑–∞–≤ –ø–∞–ª–µ—Ü, —Ä–∞–∑–º–æ–∑–∂–∏–ª –ø–∞–ª—å—Ü–µ–º –≥—Ä—É–¥—å —Å–æ–ø–µ—Ä–Ω–∏–∫–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] –ø—ã—Ç–∞–ª—Å—è —á—Ç–æ-—Ç–æ —Å–∫–∞–∑–∞—Ç—å, –∞ –∂–µ—Å—Ç–æ–∫–∏–π [playerKick] –ø—Ä–æ—Å–Ω—É–≤—à–∏—Å—å —Ä–∞–∑–º–æ–∑–∂–∏–ª –∫–æ–ø—á–∏–∫–æ–º –ª–µ–≤—É—é –Ω–æ–≥—É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] –∑–∞–±—ã–ª—Å—è, –∫–∞–∫ –≤–Ω–µ–∑–∞–ø–Ω–æ –±–µ–∑—É–º–Ω—ã–π [playerKick] —Å–æ —Å–∫—É–∫–∏, –≤–ª–µ–ø–∏–ª —É–¥–∞—Ä –∫–æ–ª–µ–Ω–æ–º –≤ –ª–µ–≤—ã–π –±–æ–∫ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] –ø–æ–ø–µ—Ä—Ö–Ω—É–ª—Å—è, –∞ –∑–∞ —ç—Ç–æ [playerKick] –º–∏–º–æ—Ö–æ–¥–æ–º —Ä–∞–∑–¥—Ä–æ–±–∏–ª –∫–æ–ª–µ–Ω–æ–º –≤–∏—Å–æ–∫ –≤—Ä–∞–≥–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] —Ä–∞—Å—Å—Ç—Ä–æ–∏–ª—Å—è, –∞ –≤ —ç—Ç–æ –≤—Ä–µ–º—è –Ω–∞–≥–ª—ã–π [playerKick] –ø–æ—à–∞—Ç–Ω—É–≤—à–∏—Å—å —Ä–∞–∑–º–æ–∑–∂–∏–ª –∫–æ–ø—á–∏–∫–æ–º –≥—É–±—ã –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] –æ—Å–º–æ—Ç—Ä–µ–ª—Å—è, –Ω–æ –≤–Ω–µ–∑–∞–ø–Ω–æ [playerKick] —Ä–æ–±–∫–æ —Ä–∞–∑–º–æ–∑–∂–∏–ª –∫–æ–ª–µ–Ω–æ–º –ª–µ–≤—ã–π –≥–ª–∞–∑ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] –æ—Å–º–æ—Ç—Ä–µ–ª—Å—è, –∞ [playerKick] –≤–ª–æ–º–∏–ª –¥—Ä–æ–±—è—â–∏–π —É–¥–∞—Ä –ø–ª–µ—á–æ–º, –ø—Ä–æ–±–∏–≤ –±–ª–æ–∫, –∫—É–¥–∞ –æ–±—ã—á–Ω–æ –Ω–µ –±—å—é—Ç –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] –∫–æ–≤—ã—Ä—è–ª—Å—è –≤ –∑—É–±–∞—Ö, –∫–∞–∫ –≤–¥—Ä—É–≥, –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ [playerKick] –æ—Ç—á–∞—è–Ω–Ω–æ —Ä–∞–∑–º–æ–∑–∂–∏–ª –ø–ª–µ—á–æ–º –º—ã—à—Ü—ã –ø—Ä–µ—Å—Å–∞ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] –ø—Ä–∏—à–µ–ª –≤ —Å–µ–±—è, –∏ –≤ —ç—Ç–æ –≤—Ä–µ–º—è [playerKick] –ø—Ä–æ–≤–µ–ª —Ä–∞–∑–±–∏–≤–∞—é—â–∏–π —É–¥–∞—Ä –∫–∏—Å—Ç—å—é —Ä—É–∫–∏, –ø—Ä–æ–±–∏–≤ –±–ª–æ–∫, –≤ –≥–æ–ª–µ–Ω—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞. [-player.hp], [hp/100]',
    '[time], [playerDefence] –ø–æ—à–∞—Ç–Ω—É–ª—Å—è, –∞ –≤ —ç—Ç–æ –≤—Ä–µ–º—è [playerKick] —Ö–∏—Ö–∏–∫–∞—è –≤–ª–µ–ø–∏–ª –≥—Ä—É–±—ã–π —É–¥–∞—Ä –æ—Ç–∫—Ä—ã—Ç–æ–π –ª–∞–¥–æ–Ω—å—é –ø–æ –±–µ–¥—Ä–∞–º –≤—Ä–∞–≥–∞. [-player.hp], [hp/100]',
  ],
  defence: [
    '[time], [playerKick] –ø–æ—Ç–µ—Ä—è–ª –º–æ–º–µ–Ω—Ç –∏ —Ö—Ä–∞–±—Ä—ã–π [playerDefence] –æ—Ç–ø—Ä—ã–≥–Ω—É–ª –æ—Ç —É–¥–∞—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–æ–π –ª–∞–¥–æ–Ω—å—é –≤ –∫–ª—é—á–∏—Ü—É.',
    '[time], [playerKick] –Ω–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞–ª —Å–∏—Ç—É–∞—Ü–∏—é, –∏ –ø–æ—Ç–æ–º—É [playerDefence] –ø–æ—Å—Ç–∞–≤–∏–ª –±–ª–æ–∫ –Ω–∞ —É–¥–∞—Ä –ø—è—Ç–∫–æ–π –≤ –ø—Ä–∞–≤—É—é –≥—Ä—É–¥—å.',
    '[time], [playerKick] –ø–æ—Ç–µ—Ä—è–ª –º–æ–º–µ–Ω—Ç –∏ [playerDefence] –ø–æ—Å—Ç–∞–≤–∏–ª –±–ª–æ–∫ –Ω–∞ —É–¥–∞—Ä –∫–æ–ª–µ–Ω–æ–º –ø–æ —Å–µ–ª–µ–∑–µ–Ω–∫–µ.',
    '[time], [playerKick] –ø–æ—Å–∫–æ–ª—å–∑–Ω—É–ª—Å—è –∏ –∑–∞–¥—É–º—á–∏–≤—ã–π [playerDefence] –ø–æ—Å—Ç–∞–≤–∏–ª –±–ª–æ–∫ –Ω–∞ —Ç—ã—á–æ–∫ –≥–æ–ª–æ–≤–æ–π –≤ –±—Ä–æ–≤—å.',
    '[time], [playerKick] —Å—Ç–∞—Ä–∞–ª—Å—è –ø—Ä–æ–≤–µ—Å—Ç–∏ —É–¥–∞—Ä, –Ω–æ –Ω–µ–ø–æ–±–µ–¥–∏–º—ã–π [playerDefence] —É—à–µ–ª –≤ —Å—Ç–æ—Ä–æ–Ω—É –æ—Ç —É–¥–∞—Ä–∞ –∫–æ–ø—á–∏–∫–æ–º –ø—Ä—è–º–æ –≤ –ø—è—Ç–∫—É.',
    '[time], [playerKick] –æ–±–º–∞–Ω—É–ª—Å—è –∏ –∂–µ—Å—Ç–æ–∫–∏–π [playerDefence] –±–ª–æ–∫–∏—Ä–æ–≤–∞–ª —É–¥–∞—Ä —Å—Ç–æ–ø–æ–π –≤ —Å–æ–ª–Ω–µ—á–Ω–æ–µ —Å–ø–ª–µ—Ç–µ–Ω–∏–µ.',
    '[time], [playerKick] –Ω–µ –¥—É–º–∞–ª –æ –±–æ–µ, –ø–æ—Ç–æ–º—É —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π [playerDefence] –æ—Ç–ø—Ä—ã–≥–Ω—É–ª –æ—Ç —É–¥–∞—Ä–∞ –∫—É–ª–∞–∫–æ–º –∫—É–¥–∞ –æ–±—ã—á–Ω–æ –Ω–µ –±—å—é—Ç.',
    '[time], [playerKick] –æ–±–º–∞–Ω—É–ª—Å—è –∏ –∂–µ—Å—Ç–æ–∫–∏–π [playerDefence] –±–ª–æ–∫–∏—Ä–æ–≤–∞–ª —É–¥–∞—Ä —Å—Ç–æ–ø–æ–π –≤ —Å–æ–ª–Ω–µ—á–Ω–æ–µ —Å–ø–ª–µ—Ç–µ–Ω–∏–µ.'
  ],
  draw: '–ù–∏—á—å—è - —ç—Ç–æ —Ç–æ–∂–µ –ø–æ–±–µ–¥–∞!'
};

const player1 = {
  player: 1,
  name: 'Sonya',
  hp: 100,
  elHP,
  renderHP,
  renderProgressbarHP,
  changeHP,
  img: 'http://reactmarathon-api.herokuapp.com/assets/sonya.gif',
  weapon: ['Bomb', 'Bojutsu', 'Axe'],
  attack: function (name) {
    console.log(name + ' ' + 'Fight...')
  }
}

const player2 = {
  player: 2,
  name: 'Scorpion',
  hp: 100,
  elHP,
  renderHP,
  renderProgressbarHP,
  changeHP,
  img: 'http://reactmarathon-api.herokuapp.com/assets/scorpion.gif',
  weapon: ['Chainsaw', 'Chakram', 'Cleaver'],
  attack: function (name) {
    console.log(name + ' ' + 'Fight...')
  }
}

function elHP() {
  console.log("üöÄ ~ file: main.js ~ line 27 ~ changeHP ~ player", this)
  return document.querySelector('.player' + this.player + ' .life ');
}

function renderProgressbarHP() {
  return this.elHP().style.width = this.hp + '%';

}

function renderHP() {
  this.elHP();
  this.renderProgressbarHP();

}

function changeHP(num) {

  this.hp -= num;

  if (this.hp <= 0) {
    this.hp = 0;
  }

}

function playerWin(name) {
  const $winnerTitle = createElement('div', 'winnerTitle');
  if (name) {
    $winnerTitle.innerText = name + ' win';
  } else {
    $winnerTitle.innerText = 'draw'
    drawLogs('draw');
  }

  return $winnerTitle;
}


function randomHP(num) {
  return Math.ceil(Math.random() * num);
}


function createElement(tag, className) {
  $tag = document.createElement(tag);

  if (className) {

    $tag.classList.add(className);

  }

  return $tag;
}


function createReloadButton() {

  const $reloadDiv = createElement('div', 'reloadWrap');
  $arenas.appendChild($reloadDiv);

  const $reloadWrap = createElement('button', 'button')
  $reloadWrap.innerText = 'Restart';

  $reloadDiv.appendChild($reloadWrap);

  $reloadWrap.addEventListener('click', function () {
    console.log('Click2');

    window.location.reload();


  })

}


function createPlayer(object) {
  const $player = createElement('div', 'player' + object.player);

  const $progressbar = createElement('div', 'progressbar');
  $player.appendChild($progressbar);

  const $life = createElement('div', 'life');
  $life.style.width = '100%';
  $life.innerText = object.hp;
  $progressbar.appendChild($life);

  const $name = createElement('div', 'name');
  $name.innerText = object.name;
  $progressbar.appendChild($name);

  const $character = createElement('div', 'character');
  $player.appendChild($character);

  const $img = createElement('img');
  $img.src = object.img;
  $character.appendChild($img);

  return $player;

}



function enemyAttack() {
  const hit = ATTACK[randomHP(3) - 1];
  const defence = ATTACK[randomHP(3) - 1];

  return {
    value: randomHP(HIT[hit]),
    hit,
    defence,
  }
}


function playerAttack() {
  const attack = {};

  for (let item of $formFight) {
    if (item.checked && item.name === 'hit') {
      attack.value = randomHP(HIT[item.value]);
      attack.hit = item.value;
    }

    if (item.checked && item.name === 'defence') {
      attack.defence = item.value;
    }

    item.checked = false;
  }

  return attack;

}

function showResult() {

  if (player1.hp === 0 || player2.hp === 0) {
    $formFight.disabled = true;
    createReloadButton();
  }

  if (player1.hp === 0 && player1.hp < player2.hp) {
    $arenas.appendChild(playerWin(player2.name))
    endLogs('end', player2.name, player1.name);
  } else if (player2.hp === 0 && player2.hp < player1.hp) {
    $arenas.appendChild(playerWin(player1.name))
    endLogs('end', player1.name, player2.name);
  } else if (player1.hp === 0 && player2.hp === 0) {
    $arenas.appendChild(playerWin())
  }

}

function switchLook(type) {
  switch(type) {
    case 'hit':
      return type;
    case 'defence':
      return type;

  }
}

function generateLogs(type, player1, player2, hits, damage) {
  const date = new Date();
  
  const text = logs[switchLook(type)][randomHP(logs[type].length)- 1].replace('[playerKick]', player1.name).replace('[playerDefence]', player2.name).replace('[time]', date.getHours() +':'+ date.getMinutes() +':'+ date.getSeconds()).replace('[-player.hp]', '- '+ hits).replace('[hp/100]', damage+'/100');
  
  const el = `<p>${text}</p>`;
  $chat.insertAdjacentHTML('afterbegin', el);
  
}


function startLogs(type, player1, player2) {
  const date = new Date();

  const start = logs[type].replace('[player1]', player1.name).replace('[player2]', player2.name).replace('[time]', date.getHours() +':'+ date.getMinutes() +':'+ date.getSeconds());

  const el = `<p>${start}</p>`;
  $chat.insertAdjacentHTML('afterbegin', el);
}

function endLogs(type, playerWins, playerLose) {

  const end = logs[type][randomHP(logs[type].length)- 1].replace('[playerWins]', playerWins).replace('[playerLose]', playerLose)

  const el = `<p>${end}</p>`;
  $chat.insertAdjacentHTML('afterbegin', el);
}

function drawLogs(type) {
  const draw = logs[type]

  const el = `<p>${draw}</p>`;
  $chat.insertAdjacentHTML('afterbegin', el);
}

$formFight.addEventListener('submit', function (e) {
  e.preventDefault();

  const enemy = enemyAttack();
  const player = playerAttack();


  if (enemy.hit !== player.defence) {
    player1.changeHP(enemy.value);
    player1.renderHP();
    generateLogs('hit', player2, player1, enemy.value, player1.hp)
    generateLogs('defence', player2, player1)
  }

  if (player.hit !== enemy.defence) {
    player2.changeHP(player.value);
    player2.renderHP();
    generateLogs('hit', player1, player2, player.value, player2.hp)
    generateLogs('defence', player1, player2)
  }

  showResult();

  console.log('####: enemy', enemy);
  console.log('####: player', player);

})


$arenas.appendChild(createPlayer(player1));
$arenas.appendChild(createPlayer(player2));

startLogs('start', player1, player2);


